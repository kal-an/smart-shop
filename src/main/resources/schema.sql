create table if not exists users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(30) NOT NULL,
    login VARCHAR(10) NOT NULL,
    email VARCHAR(30) NOT NULL,
    password VARCHAR(30) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_EMAIL UNIQUE (email),
    CONSTRAINT UQ_LOGIN UNIQUE (login)
);

create table if not exists products (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title VARCHAR(50) NOT NULL,
    price FLOAT NOT NULL,
    CONSTRAINT pk_product PRIMARY KEY (id)
);

create table if not exists categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(20) NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id)
);

create table if not exists orders (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    cart_number VARCHAR(16) NOT NULL,
    user_id BIGINT NOT NULL,
    status VARCHAR(10) NOT NULL,
    CONSTRAINT pk_order PRIMARY KEY (id),
    CONSTRAINT FK_ORDER_ON_USER FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE RESTRICT
);

create table if not exists products_categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    category_id BIGINT NOT NULL,
    product_id BIGINT NOT NULL,
    CONSTRAINT pk_pc PRIMARY KEY (id),
    CONSTRAINT FK_PC_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT FK_PC_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES products (id)
);

create table if not exists products_orders (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    order_id BIGINT NOT NULL,
    product_id BIGINT NOT NULL,
    CONSTRAINT pk_po PRIMARY KEY (id),
    CONSTRAINT FK_PO_ON_ORDER FOREIGN KEY (order_id) REFERENCES orders (id),
    CONSTRAINT FK_PO_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES products (id)
);

